import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class JsonPathUpdater {

    public static void setValueByPath(JSONObject rootNode, String path, Object value) throws JSONException {
        String[] pathComponents = path.split("\\.");
        JSONObject currentNode = rootNode;

        for (int i = 0; i < pathComponents.length; i++) {
            String component = pathComponents[i];

            if (component.contains("[")) {
                String arrayField = component.substring(0, component.indexOf('['));
                int arrayIndex = Integer.parseInt(component.substring(component.indexOf('[') + 1, component.indexOf(']')));

                JSONArray arrayNode = currentNode.optJSONArray(arrayField);
                if (arrayNode == null) {
                    arrayNode = new JSONArray();
                    currentNode.put(arrayField, arrayNode);
                }

                if (i == pathComponents.length - 1) {
                    arrayNode.put(arrayIndex, value);
                } else {
                    if (arrayNode.isNull(arrayIndex) || !(arrayNode.get(arrayIndex) instanceof JSONObject)) {
                        arrayNode.put(arrayIndex, new JSONObject());
                    }
                    currentNode = arrayNode.getJSONObject(arrayIndex);
                }
            } else {
                if (i == pathComponents.length - 1) {
                    currentNode.put(component, value);
                } else {
                    if (!currentNode.has(component) || !(currentNode.get(component) instanceof JSONObject)) {
                        currentNode.put(component, new JSONObject());
                    }
                    currentNode = currentNode.getJSONObject(component);
                }
            }
        }
    }

    public static void main(String[] args) throws JSONException {
        // Example JSON string
        String jsonString =   "}";

        // Parse JSON string to JSONObject
        JSONObject rootNode = new JSONObject(jsonString);

        // Path to the field where we want to set the new value
        String path = "principal.attributes[0].value.columns";

        // New value to set
        String newValue = "NEW_COLUMN_VALUE";

        // Set the value in the JSON object at the specified path
        setValueByPath(rootNode, path, newValue);

        // Print the updated JSON object
        System.out.println(rootNode.toString(2));
    }
}